/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package image_aes_gui;

import static image_aes_gui.aes.generateKey;
import java.io.File;
import java.io.IOException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.ToggleGroup;
import javafx.stage.FileChooser;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author Mo R Torky
 */
public class Select_img extends javax.swing.JFrame {

    /**
     * Creates new form Select_img
     */
    public Select_img() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        browse_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        imagePathJLabel = new javax.swing.JLabel();
        generateKey_btn = new javax.swing.JButton();
        key_jLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ECBjRBtn = new javax.swing.JRadioButton();
        CBCjRBtn = new javax.swing.JRadioButton();
        CTRjRBtn = new javax.swing.JRadioButton();
        encrypt_btn = new javax.swing.JButton();
        errorjLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Choose Image:");

        browse_btn.setText("Browse");
        browse_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                browse_btnMouseClicked(evt);
            }
        });

        jLabel2.setText("Selected Image: ");

        imagePathJLabel.setText("No Image Selected.");

        generateKey_btn.setText("Generate Key");
        generateKey_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateKey_btnMouseClicked(evt);
            }
        });
        generateKey_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateKey_btnActionPerformed(evt);
            }
        });

        jLabel3.setText("key:");

        jLabel4.setText("Choose AES mode:");

        ECBjRBtn.setText("ECB");
        ECBjRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ECBjRBtnActionPerformed(evt);
            }
        });

        CBCjRBtn.setText("CBC");

        CTRjRBtn.setText("CTR");

        encrypt_btn.setText("Encrypt&Decrypt Image");
        encrypt_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encrypt_btnMouseClicked(evt);
            }
        });
        encrypt_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encrypt_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(28, 28, 28)
                                    .addComponent(browse_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(imagePathJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(52, 52, 52)
                                .addComponent(ECBjRBtn)
                                .addGap(34, 34, 34)
                                .addComponent(CBCjRBtn)
                                .addGap(40, 40, 40)
                                .addComponent(CTRjRBtn)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(key_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generateKey_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(encrypt_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(errorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(236, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(browse_btn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(imagePathJLabel))
                .addGap(18, 18, 18)
                .addComponent(generateKey_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(key_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ECBjRBtn)
                    .addComponent(CBCjRBtn)
                    .addComponent(CTRjRBtn))
                .addGap(18, 18, 18)
                .addComponent(encrypt_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String filePath;
    private void browse_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browse_btnMouseClicked
        // TODO add your handling code here:
        int com = evt.getClickCount();
        System.out.println(com);
        // make an object of the class filechooser
        FileChooser f1 = new FileChooser();
        f1.setTitle("Select Image");
        
        // create an object of JFileChooser class
        JFileChooser j = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        // invoke the showsSaveDialog function to show the save dialog
        int r = j.showSaveDialog(null);

        // if the user selects a file
        if (r == JFileChooser.APPROVE_OPTION)

        {
            // set the label to the path of the selected file
            imagePathJLabel.setText(j.getSelectedFile().getAbsolutePath());
            filePath = j.getSelectedFile().getAbsolutePath();
        }
        // if the user cancelled the operation
        else
            imagePathJLabel.setText("the user cancelled the operation");

    }//GEN-LAST:event_browse_btnMouseClicked

    private void generateKey_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateKey_btnActionPerformed
//        try {
//            // TODO add your handling code here:
//            int com = evt.getClickCount();
//            
//            int n = 128;
//            SecretKey key = generateKey(n);
//            key_jLabel.setText(key.getFormat());
//        } catch (NoSuchAlgorithmException ex) {
//            Logger.getLogger(Select_img.class.getName()).log(Level.SEVERE, null, ex);
//        }

        
    }//GEN-LAST:event_generateKey_btnActionPerformed
SecretKey key;
    private void generateKey_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateKey_btnMouseClicked
        // TODO add your handling code here:
        try {
            int com = evt.getClickCount();
            
            int n = 128;
            key = generateKey(n);
            byte[] k = key.getEncoded();
            key_jLabel.setText(bytesToHex(k));
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Select_img.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_generateKey_btnMouseClicked

    private void ECBjRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ECBjRBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ECBjRBtnActionPerformed

    private void encrypt_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encrypt_btnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_encrypt_btnActionPerformed

    private void encrypt_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encrypt_btnMouseClicked
        // TODO add your handling code here:
        boolean error=false;
        System.out.println(ECBjRBtn.isSelected());
        System.out.println(CBCjRBtn.isSelected());
        System.out.println(CTRjRBtn.isSelected());
        if(!(ECBjRBtn.isSelected() | CBCjRBtn.isSelected()|CTRjRBtn.isSelected())){
            errorjLabel.setText("plz select mode of encryption");
            error=true;
            System.out.println();
        }else if(null==key){
            error=true;
            errorjLabel.setText("plz generate key first");
        }else if(null==filePath){
            error=true;
            errorjLabel.setText("plz select image first");
        }
        File inputFile = new File(filePath);
        String algorithm = "AES/CBC/PKCS5Padding";
        String algorithm2 = "AES/ECB/PKCS5Padding";
        String algorithm3 = "AES/CTR/PKCS5Padding";
        try {
        if(ECBjRBtn.isSelected()&&!error){
            File encryptedFile2 = new File("encrypted_ECB.png");
            File decryptedFile2 = new File("decrypted_ECB.jpg");
            aes.ECBencryptFile(algorithm2, key, inputFile, encryptedFile2);
            aes.ECBdecryptFile(algorithm2, key, encryptedFile2, decryptedFile2);
        }else if(CBCjRBtn.isSelected()&&!error){
        File encryptedFile = new File("encrypted_CBC.jpg");
        File decryptedFile = new File("decrypted_CBC.jpg");
        IvParameterSpec ivParameterSpec = aes.generateIv();

        aes.CBCencryptFile(algorithm, key, ivParameterSpec, inputFile, encryptedFile);
        aes.CBCdecryptFile(algorithm, key, ivParameterSpec, encryptedFile, decryptedFile); 
        }else if(CTRjRBtn.isSelected()&&!error){
        File encryptedFile3 = new File("encrypted_CTR.jpg");
        File decryptedFile3 = new File("decrypted_CTR.jpg");
        IvParameterSpec ivParameterSpec = aes.generateIv();

        aes.CBCencryptFile(algorithm3, key, ivParameterSpec, inputFile, encryptedFile3);
        aes.CBCdecryptFile(algorithm3, key, ivParameterSpec,encryptedFile3, decryptedFile3);
        }
        } catch (IOException ex) {
            Logger.getLogger(Select_img.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchPaddingException ex) {
            Logger.getLogger(Select_img.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Select_img.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidAlgorithmParameterException ex) {
            Logger.getLogger(Select_img.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidKeyException ex) {
            Logger.getLogger(Select_img.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadPaddingException ex) {
            Logger.getLogger(Select_img.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalBlockSizeException ex) {
            Logger.getLogger(Select_img.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_encrypt_btnMouseClicked
private static final char[] HEX_ARRAY = "0123456789ABCDEF".toCharArray();
public static String bytesToHex(byte[] bytes) {
    char[] hexChars = new char[bytes.length * 2];
    for (int j = 0; j < bytes.length; j++) {
        int v = bytes[j] & 0xFF;
        hexChars[j * 2] = HEX_ARRAY[v >>> 4];
        hexChars[j * 2 + 1] = HEX_ARRAY[v & 0x0F];
    }
    return new String(hexChars);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Select_img.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Select_img.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Select_img.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Select_img.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            ToggleGroup tg = new ToggleGroup();
            public void run() {
                new Select_img().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton CBCjRBtn;
    private javax.swing.JRadioButton CTRjRBtn;
    private javax.swing.JRadioButton ECBjRBtn;
    private javax.swing.JButton browse_btn;
    private javax.swing.JButton encrypt_btn;
    private javax.swing.JLabel errorjLabel;
    private javax.swing.JButton generateKey_btn;
    private javax.swing.JLabel imagePathJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel key_jLabel;
    // End of variables declaration//GEN-END:variables
}
